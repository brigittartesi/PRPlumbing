{"version":3,"sources":["ContactForm.js","Home.js","Contact.js","Services.js","About.js","App.js","serviceWorker.js","index.js"],"names":["ContactForm","props","state","event","preventDefault","console","log","id","onSubmit","this","sendForm","type","name","rows","cols","Component","Home","to","src","Contact","About","App","currentMenuItem","handleMenuChange","bind","setState","target","exact","path","component","Work","Menu","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6cdb10cc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport './ContactForm.css'\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nclass ContactForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    sendForm(event) {\r\n        event.preventDefault();\r\n        //if (this.validateForm()) {\r\n        console.log(event);\r\n        //} else {\r\n\r\n        //}\r\n    }\r\n\r\n    validateForm() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"wrapper\">\r\n                <h2>Get in touch</h2> <br />\r\n                <form onSubmit={this.sendForm}>\r\n                    <label>Name*</label>\r\n                    <input type=\"text\" id=\"name\" name=\"name\"></input>\r\n\r\n                    <label>Email*</label>\r\n                    <input type=\"text\" id=\"email\" name=\"email\"></input>\r\n\r\n                    <label>Phone*</label>\r\n                    <input type=\"text\" id=\"phone\" name=\"phone\"></input>\r\n\r\n                    <label>Message</label>\r\n                    <textarea rows=\"4\" cols=\"50\" id=\"message\"></textarea>\r\n\r\n                    <button>Submit</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ContactForm;","import React, { Component } from \"react\";\r\nimport './Home.css'\r\nimport ContactForm from './ContactForm.js';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"banner-wrapper\">\r\n                    <div id=\"banner\">\r\n                        <div id=\"banner-content\">\r\n                            <span><strong>PR Plumbing</strong></span>\r\n                            <p>\r\n                                asdfasfasdfasdfasdfasdfasdfasdfasdfasdf <br />\r\n                                asdfasfasdfasdfasdfasdfasdfasdfasdfasdfdfasdas\r\n                            </p>\r\n                            <br />\r\n                            <Link id=\"work\" to=\"/Work\">VIEW OUR WORK</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"info-wrapper\">\r\n                    <p>asdfasdfasdfasdfasdfasdfasdf<br />\r\n                        asdfasfasdfasdfasdfasdfasdfasdfasdfasdf<br />\r\n                        asfdasdfasdf\r\n                    </p>\r\n                    <div id=\"info\">\r\n                        <Link to=\"/Residential\">\r\n                            <div id=\"residential\">\r\n                                <img src=\"https://steamcdn-a.akamaihd.net/steam/apps/992175/header.jpg?t=1575569035\"></img>\r\n                                <div>\r\n                                    <strong>RESIDENTIAL</strong> <br />\r\n                                    <p>asdfasdfasdfasdfasdfasdf</p>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                        <Link to=\"/Commercial\">\r\n                            <div id=\"commercial\">\r\n                                <img src=\"https://steamcdn-a.akamaihd.net/steam/apps/992175/header.jpg?t=1575569035\"></img>\r\n                                <div>\r\n                                    <strong>COMMERCIAL</strong> <br />\r\n                                    <p>asdfasdfasdfasdfasdfasdf</p>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                    <div id=\"contact-wrapper\">\r\n                        <img src=\"https://steamcdn-a.akamaihd.net/steam/apps/992175/header.jpg?t=1575569035\"></img>\r\n                        <ContactForm></ContactForm>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport './Contact.css';\r\nimport ContactForm from './ContactForm.js';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Contact</h2> <br />\r\n                <ContactForm></ContactForm>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","import React, { Component } from \"react\";\r\nimport './content.css'\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nclass Portfolio extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n       currentImage: 0,\r\n      projects: [\r\n        { id: \"project1\", name: \"Project 1\", imgs: ['thumbnail', 'display1', 'display2'] },\r\n        { id: \"project2\", name: \"Project 2\", imgs: ['thumbnail', 'display1', 'display2'] },\r\n        { id: \"project3\", name: \"Project 3\", imgs: ['thumbnail', 'display1', 'display2'] },\r\n      ],\r\n    }\r\n\r\n    this.displayPortfolio = this.displayPortfolio.bind(this);\r\n    this.displayProject = this.displayProject.bind(this);\r\n    this.handleSlideChange = this.handleSlideChange.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      this.setState({currentImage: 0});\r\n    }\r\n  }\r\n\r\n\r\n  handleSlideChange(i, project) {\r\n    let newState = this.state;\r\n    newState.currentImage += i;\r\n    if (newState.currentImage >= project.imgs.length) newState.currentImage = 1;\r\n    if (newState.currentImage < 1) newState.currentImage = project.imgs.length;\r\n    this.setState({ newState });\r\n  }\r\n\r\n  displayPortfolio() {\r\n    return (\r\n      <div>\r\n        <h3>Projects</h3>\r\n        <ul className=\"project-list\">\r\n          {this.state.projects.map((project) => this.createPortfolioItems(project))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  createPortfolioItems(project) {\r\n    return (\r\n      <span key={project.id}>\r\n        <li>\r\n          <Link to={`${this.props.match.url}/${project.id}`}>\r\n            <div>\r\n              <img src={`images/${project.imgs[0]}`} />\r\n            </div>\r\n            <div className=\"project-text\">{project.name}</div>\r\n          </Link>\r\n        </li>\r\n        {project.id === \"project3\" && <br />}\r\n      </span>\r\n    )\r\n  }\r\n\r\n  displayProject({ match }) {\r\n    let project = this.state.projects.find(x => x.id === match.params.id);\r\n    if (!project) {\r\n      project = this.state.projects[0];\r\n    }\r\n    return (\r\n      <div className=\"slideshow-container\">\r\n        <div>\r\n          <img className=\"slideshow\" src={process.env.PUBLIC_URL + `/images/${project.imgs[this.state.currentImage]}`}></img>\r\n        </div>\r\n        <a className=\"prev\" onClick={() => this.handleSlideChange(-1, project)}>&#10094;</a>\r\n        <a className=\"next\" onClick={() => this.handleSlideChange(1, project)}>&#10095;</a>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Portfolio</h2> <br />\r\n        <Route exact path={`${this.props.match.path}/:id`} component={this.displayProject} />\r\n        <Route\r\n          exact\r\n          path={this.props.match.path}\r\n          render={this.displayPortfolio}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portfolio;","import React, { Component } from \"react\";\r\nimport './About.css'\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nclass About extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>About</h2> <br />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Home from './Home.js';\r\nimport Services from './Services.js';\r\nimport Contact from './Contact.js';\r\nimport About from './About.js';\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMenuItem: \"Home\",\r\n    }\r\n\r\n    this.handleMenuChange = this.handleMenuChange.bind(this);\r\n  }\r\n\r\n  handleMenuChange(event) {\r\n    this.setState({ currentMenuItem: event.target.id });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Router>\r\n        <div id=\"wrapper\">\r\n          <div id=\"menu-wrapper\">\r\n            <Menu />\r\n          </div>\r\n\r\n          <div id=\"content\">\r\n            <Switch>\r\n              <Route exact path=\"(/|/home)\" component={Home} />\r\n              <Route exact path=\"/about\" component={About} />\r\n              <Route path=\"/contact\" component={Contact} />\r\n              <Route path=\"/work\" component={Work} />\r\n              <Route component={Home} />\r\n            </Switch>\r\n          </div>\r\n\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n};\r\n\r\nconst Work = () => <h2>WORK</h2>\r\n\r\nconst Menu = () => (\r\n  <ul id=\"menu\">\r\n    <li id=\"home\">\r\n      <Link to=\"/\">PR Plumbing</Link>\r\n    </li>\r\n    <li>\r\n      <Link id=\"contact\" to=\"/Contact\">Contact</Link>\r\n    </li>\r\n    <li>\r\n      <Link to=\"/Services\">Services</Link>\r\n    </li>\r\n    <li>\r\n      <Link to=\"/About\">About</Link>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}